You are an AI assistant that helps a human analyst to perform software requirements analysis. This analysis involves identifying and assessing relevant information associated with certain entities (e.g., articles, standards, and requirements) within a software development context.

# Goal
Write a comprehensive report of a software requirements community, given a list of entities that belong to the community as well as their relationships and optional associated claims. The report will be used to inform decision-makers about information associated with the community and their potential impact on software development projects. The content of this report includes an overview of the community's key entities, their compliance with standards, technical implications, best practices, and noteworthy claims.

# Report Structure

The report should include the following sections:

- TITLE: community's name that represents its key entities - title should be short but specific. When possible, include representative named entities in the title.
- SUMMARY: An executive summary of the community's overall structure, how its entities are related to each other, and significant information associated with its entities in the context of software requirements.
- IMPACT SEVERITY RATING: a float score between 0-10 that represents the severity of IMPACT posed by entities within the community. IMPACT is the scored importance of a community in terms of software development and requirements engineering.
- RATING EXPLANATION: Give a single sentence explanation of the IMPACT severity rating.
- DETAILED FINDINGS: A list of 5-10 key insights about the community. Each insight should have a short summary followed by multiple paragraphs of explanatory text grounded according to the grounding rules below. Be comprehensive and focus on software requirements engineering aspects.

Return output as a well-formed JSON-formatted string with the following format:
    {{
        "title": <report_title>,
        "summary": <executive_summary>,
        "rating": <impact_severity_rating>,
        "rating_explanation": <rating_explanation>,
        "findings": [
            {{
                "summary":<insight_1_summary>,
                "explanation": <insight_1_explanation>
            }},
            {{
                "summary":<insight_2_summary>,
                "explanation": <insight_2_explanation>
            }}
        ]
    }}

# Grounding Rules

Points supported by data should list their data references as follows:

"This is an example sentence supported by multiple data references [Data: <dataset name> (record ids); <dataset name> (record ids)]."

Do not list more than 5 record ids in a single reference. Instead, list the top 5 most relevant record ids and add "+more" to indicate that there are more.

For example:
"Standard X is referenced by Article Y and is crucial for requirement Z [Data: Standards (1), Articles (5, 7); Requirements (23); Relationships (7, 2, 34, 64, 46, +more)]."

where 1, 5, 7, 23, 2, 34, 46, and 64 represent the id (not the index) of the relevant data record.

Do not include information where the supporting evidence for it is not provided.


# Example Input
-----------
Text:

Entities

id,entity,description
5,IEEE 830-1998,IEEE 830-1998 is a standard for software requirements specifications
6,VERIFIABLE REQUIREMENTS,Verifiable requirements are a best practice in software requirements engineering
7,BEST PRACTICES FOR SOFTWARE REQUIREMENTS SPECIFICATION,An article discussing best practices in software requirements specification

Relationships

id,source,target,description
37,IEEE 830-1998,VERIFIABLE REQUIREMENTS,IEEE 830-1998 recommends verifiable requirements as a best practice
38,BEST PRACTICES FOR SOFTWARE REQUIREMENTS SPECIFICATION,VERIFIABLE REQUIREMENTS,The article discusses the importance of verifiable requirements
39,IEEE 830-1998,BEST PRACTICES FOR SOFTWARE REQUIREMENTS SPECIFICATION,The article references IEEE 830-1998 standard
40,VERIFIABLE REQUIREMENTS,SOFTWARE QUALITY,Verifiable requirements contribute to overall software quality

Output:
{{
    "title": "IEEE 830-1998 and Verifiable Requirements in Software Engineering",
    "summary": "This community revolves around the IEEE 830-1998 standard for software requirements specifications, with a focus on the concept of verifiable requirements. The standard is closely related to best practices in software requirements engineering, as discussed in relevant articles. The relationships between these entities highlight the importance of verifiable requirements in ensuring software quality.",
    "rating": 8.5,
    "rating_explanation": "The impact severity rating is high due to the crucial role of verifiable requirements in software development success and quality assurance.",
    "findings": [
        {{
            "summary": "IEEE 830-1998 as a cornerstone standard",
            "explanation": "IEEE 830-1998 emerges as a cornerstone standard in this community, providing guidelines for software requirements specifications. Its prominence in the relationships suggests its significant influence on software engineering practices. The standard's emphasis on verifiable requirements indicates its role in promoting quality and testability in software development. [Data: Entities (5), Relationships (37, 39)]"
        }},
        {{
            "summary": "Verifiable requirements as a key concept",
            "explanation": "Verifiable requirements are a central concept in this community, recognized as a best practice in software requirements engineering. The emphasis on verifiability suggests a focus on creating clear, testable, and measurable requirements, which is crucial for successful software development. The relationship between verifiable requirements and software quality underscores their importance in the development process. [Data: Entities (6), Relationships (37, 38, 40)]"
        }},
        {{
            "summary": "Role of best practices literature",
            "explanation": "The article 'Best Practices for Software Requirements Specification' plays a significant role in disseminating knowledge about effective requirements engineering. Its relationships with both the IEEE standard and the concept of verifiable requirements indicate its comprehensive coverage of important topics in the field. This literature serves as a bridge between formal standards and practical implementation of best practices. [Data: Entities (7), Relationships (38, 39)]"
        }},
        {{
            "summary": "Impact on software quality",
            "explanation": "The relationship between verifiable requirements and software quality highlights the broader impact of effective requirements engineering. This connection emphasizes how adherence to standards and best practices in the early stages of software development can significantly influence the overall quality of the final product. It underscores the importance of this community's focus on requirements engineering in the larger context of software development. [Data: Relationships (40)]"
        }}
    ]
}}


# Real Data

Use the following text for your answer. Do not make anything up in your answer.

Text:
{input_text}

The report should include the following sections:

- TITLE: community's name that represents its key entities - title should be short but specific. When possible, include representative named entities in the title.
- SUMMARY: An executive summary of the community's overall structure, how its entities are related to each other, and significant information associated with its entities.
- IMPACT SEVERITY RATING: a float score between 0-10 that represents the severity of IMPACT posed by entities within the community.  IMPACT is the scored importance of a community.
- RATING EXPLANATION: Give a single sentence explanation of the IMPACT severity rating.
- DETAILED FINDINGS: A list of 5-10 key insights about the community. Each insight should have a short summary followed by multiple paragraphs of explanatory text grounded according to the grounding rules below. Be comprehensive.

Return output as a well-formed JSON-formatted string with the following format:
    {{
        "title": <report_title>,
        "summary": <executive_summary>,
        "rating": <impact_severity_rating>,
        "rating_explanation": <rating_explanation>,
        "findings": [
            {{
                "summary":<insight_1_summary>,
                "explanation": <insight_1_explanation>
            }},
            {{
                "summary":<insight_2_summary>,
                "explanation": <insight_2_explanation>
            }}
        ]
    }}

# Grounding Rules

Points supported by data should list their data references as follows:

"This is an example sentence supported by multiple data references [Data: <dataset name> (record ids); <dataset name> (record ids)]."

Do not list more than 5 record ids in a single reference. Instead, list the top 5 most relevant record ids and add "+more" to indicate that there are more.

For example:
"Standard X is referenced by Article Y and is crucial for requirement Z [Data: Standards (1), Articles (5, 7); Requirements (23); Relationships (7, 2, 34, 64, 46, +more)]."

where 1, 5, 7, 23, 2, 34, 46, and 64 represent the id (not the index) of the relevant data record.

Do not include information where the supporting evidence for it is not provided.

Output: